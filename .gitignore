
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# its better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
*.egg
*.egg-info
dist
build
eggs
parts
bin
var
sdist
develop-eggs
.installed.cfg
lib
lib64

# Logs and databases #
######################
*.log
*.sql
*.sqlite*
pip-log.txt

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Python generated files #
##########################
*.pyc
*.pyo
*.py[cod]

# Unit test and coverage reports #
##################################
.coverage
.tox
nosetests.xml
htmlcov

# Translations #
################
*.mo

# Others    #
#############
# *~
*.bak
*.swp
*.swf
__pycache__

####################
# For this project #
####################
*.rst
# *.jpg
# *.png*
*.gif
*.xap
# *.jpeg
*.xml

# virtualenv directory
## e.g. venv_django_react_configure
/staticfiles

# learn how to deploy correctly   #
# [project-name]/static/build     #
# learn how to deploy correctly## #
# e.g. django_react_configure/static/build


# You shouldnt commit
# your local env directory

# ENV VARIABLES #
#################
.env
env.bak/
env/
ENV/

.venv
venv.bak/
venv/

# Complexity #
##############
output/*.html
output/*/index.html

# Sphinx #
##########
# learn how to deploy correctly
# docs/_build

# Ipython Notebook #
###################
*.ipynb

# Node Modules #
################
/node_modules

# Webpack #
###########
package-lock.json
webpack-stats.json

# Sass #
########
.sass-cache/
*.css.map
*.sass.map
*.scss.map

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# production #
##############
/build
local.py


# misc
.DS_Store
.env.local
.env.development
.env.development.local
.env.test.local
.env.production
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

.env
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*
/staticfiles
local.py
project_notes.rst
project_notes.md

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/

# gatsby
public

# typescript
tsconfig.tsbuildinfo
